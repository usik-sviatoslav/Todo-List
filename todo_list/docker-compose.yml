services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -h postgres -p 5432" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - logs:/var/log/postgresql
    ports:
      - ${POSTGRES_PORT}:5432

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/var/lib/redis/data

  celery-worker:
    image: todo-list:latest
    container_name: celery-worker
    env_file: .env
    restart: always
    command: /bin/bash -c "celery -A core worker --loglevel=info"
    depends_on:
      todo-list:
        condition: service_healthy
    volumes:
      - logs:/var/log/celery/worker

  celery-beat:
    image: todo-list:latest
    container_name: celery-beat
    env_file: .env
    restart: always
    command: /bin/bash -c "celery -A core beat --loglevel=info"
    depends_on:
      todo-list:
        condition: service_healthy
    volumes:
      - celery_data:/var/lib/celery/data
      - logs:/var/log/celery/beat

  todo-list:
    image: todo-list:latest
    container_name: todo-list
    env_file: .env
    restart: always
    command: /bin/bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "python", "manage.py", "check" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./:/code/
      - logs:/var/log/todo-list
    ports:
      - ${DJANGO_PORT}:8000

volumes:
  postgres_data: { }
  celery_data: { }
  redis_data: { }
  logs: { }
